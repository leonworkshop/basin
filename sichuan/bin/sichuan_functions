#!/bin/bash

#
# Copyright 2014, Leon's Workshop Ltd, All rights reserved
#
# Common functions for sichuan bash scripts
#

HOME_DIR=/opt/shucaibao
BASIN_SENDSTATS=$HOME_DIR/basin/basin/bin/basin_sendstats.py
STATE_FILE=$HOME_DIR/run/sichuan_state

print_msg () {
  logger -p local7.info -t 'sichuan' \"$1\"
  echo "$1"
}

get_system_state () {
  if [ ! -f $STATE_FILE ]; then
    echo 'system_bootstrap'
  else
    state=`cat $STATE_FILE | grep 'state:' | awk '{print substr($0, 10)}'`
    echo $state
  fi
}

run_with_retry () {
  n=0
  until [ $n -ge 5 ]
  do
    eval $1
    [ $? -eq 0 ] && return 0
    print_msg "Fail in command [$1]....Retry $n/5"
    n=$[$n+1]
    sleep 5
  done
  system_bad "Failure in command [$1] of $0"
  exit 1
}

puppet_with_retry () {
  n=0
  until [ $n -ge 5 ]
  do
    if [[ $DEBUG == "true" ]]; then
      puppet apply --detailed-exitcodes $1
    else
      puppet apply --detailed-exitcodes --logdest syslog $1
    fi
    RETVAR=$?
    if [[ $RETVAR == 2 || $RETVAR == 0 ]]; then
      print_msg "puppet command $1 exit successfully"
      return 0
    fi
    print_msg "Fail in command [$1]....Retry $n/5"
    n=$[$n+1]
    sleep 5
  done
  system_bad "Failure in command [$1] of $0"
  exit 1
}

basin_send_state () {
    # send system state to tarim
    if [ -f $BASIN_SENDSTATS ]; then
        pushd $HOME_DIR/basin
        if [ -f $HOME_DIR/run/host.yaml ]; then
            phase=`cat $HOME_DIR/run/host.yaml | grep "phase:" | awk '{print $2}'`
            print_msg "basin send system state of phase$phase to tarim"
            $HOME_DIR/basin/tools/with_venv.sh python $BASIN_SENDSTATS --server tarim.internal.shucaibao.com --metric "deploy.server.state" --value $STATE_FILE --pid $HOME_DIR/run/stats.pid
            $HOME_DIR/basin/tools/with_venv.sh python $BASIN_SENDSTATS --server tarim.internal.shucaibao.com --metric "deploy.server.phase" --value $phase --pid $HOME_DIR/run/stats.pid
        else
            $HOME_DIR/basin/tools/with_venv.sh python $BASIN_SENDSTATS --server tarim.internal.shucaibao.com --metric "deploy.server.state" --value $STATE_FILE --pid $HOME_DIR/run/stats.pid
        fi
        popd
    else
        python /root/basin_sendstate.py --server tarim.internal.shucaibao.com --metric "deploy.server.state" --value $STATE_FILE
    fi
}

system_bootstrap () {
  cat > $STATE_FILE << EOL
---
  state: system_bootstrap
  code: 000
  message: $1
EOL
  basin_send_state
}

system_firstboot () {
  cat > $STATE_FILE << EOL
---
  state: system_firstboot
  code: 001
  message: $1
EOL
  basin_send_state
}

system_secondboot () {
  cat > $STATE_FILE << EOL
---
  state: system_secondboot
  code: 002
  message: $1
EOL
  basin_send_state
}

system_ready () {
  cat > $STATE_FILE << EOL
---
  state: system_ready
  code: 003
  message: $1
EOL
  basin_send_state
}

system_bad () {
  cat > $STATE_FILE << EOL
---
  state: system_bad
  code: 004
  message: $1
EOL
  basin_send_state
}

config_inprogress () {
  cat > $STATE_FILE << EOL
---
  state: config_inprogress
  code: 005
  message: $1
EOL
  basin_send_state
}

config_fault () {
  cat > $STATE_FILE << EOL
---
  state: config_fault
  code: 006
  message: $1
EOL
  basin_send_state
}
