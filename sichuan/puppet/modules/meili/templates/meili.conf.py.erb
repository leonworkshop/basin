
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

from meili.conf.server import *

BASE_DIR = os.path.dirname(__file__)

DATABASES = {
        'default': {
                'ENGINE': 'django.db.backends.mysql',
                'HOST': '<%= scope.lookupvar('meili::rds_host') %>',
                'PORT': '<%= scope.lookupvar('meili::rds_port') %>',
                'NAME': 'shoowo_db',
                'USER': 'meili',
                'PASSWORD': 'rds_meil1',
                'OPTIONS': {
                    'autocommit': True,
                },
        }
}

SECRET_KEY = 'CGU8pVbQAe7t/jnxIPg9o6pHlRC8yEg40kIOxARxCz0/ujVJB4P9og=='

############### WebServer ##################
# If you're using a reverse proxy, you should enable the X-Forwarded-Proto
# and X-Forwarded-Host headers, and uncomment the following settings
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
# USE_X_FORWARDED_HOST = True

MEILI_WEB_HOST = '127.0.0.1'
MEILI_WEB_PORT = 9000
MEILI_WEB_OPTIONS = {
    'workers': 3,  # the number of gunicorn workers
    'secure_scheme_headers': {'X-FORWARDED-PROTO': 'https'},
    'pidfile': os.path.join(BASE_DIR, 'gunicorn.pid'),
}

########### Emei ##############
EMEI_STORAGE_SERVICE = 'emei.storage_services.manager.StorageServiceManager'
EMEI_OPTIONS = {
    'provider_info': {
        'provider': 'aliyun',
        'provider_url': 'aliyuncs.com',
        'provider_protocol': 'http',
        'access_key_id': '<%= scope.lookupvar('meili::aliyun_access_id') %>',
        'access_key_secret': '<%= scope.lookupvar('meili::aliyun_access_key') %>',
        'nosql': {
            'enable': True,
            'instances': [
                {'name': '<%= scope.lookupvar('meili::ots_instance_name') %>',
                 'region': '<%= scope.lookupvar('meili::ots_instance_region') %>',
                }
            ]
        },
        'blob': {
            'enable': True,
            'instances': [
                <% scope.lookupvar('meili::oss_instances').each do |val| -%>
                    {'name': '<%= val['name'] %>',
                     'region': '<%= val['name'] %>',
                    },
                <% end -%>
            ]
        },
        'message': {
            'enable': True,
            'owner_id': '<%= scope.lookupvar('meili::mqs_instance_owner_id') %>',
            'instances': [
                {'name': '<%= scope.lookupvar('meili::mqs_instance_name') %>',
                 'region': '<%= scope.lookupvar('meili::mqs_instance_region') %>',
                }
            ]
        }
    }
}

EMEI_NOSQL_INSTANCE_NAME = '<%= scope.lookupvar('meili::ots_instance_name') %>'
EMEI_MESSAGE_QUEUE_NAME  = '<%= scope.lookupvar('meili::mqs_instance_name') %>'
