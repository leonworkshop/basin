# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

from meili.conf.server import *

BASE_DIR = os.path.dirname(__file__)

DATABASES = {
        'default': {
                'ENGINE': 'django.db.backends.mysql',
                'HOST': '<%= scope.lookupvar('meili::rds_host') %>',
                'PORT': '<%= scope.lookupvar('meili::rds_port') %>',
                'NAME': 'meili_db',
                'USER': 'meili',
                'PASSWORD': 'rds_meil1',
                'OPTIONS': {
                    'autocommit': True,
                },
        }
}

SECRET_KEY = 'CGU8pVbQAe7t/jnxIPg9o6pHlRC8yEg40kIOxARxCz0/ujVJB4P9og=='

############### Tarim ##################
# statsd integration
STATSD_CLIENT = 'django_statsd.clients.normal'
STATSD_CELERY_SIGNALS = True
STATSD_MODEL_SIGNALS = True
STATSD_HOST = '<%= scope.lookupvar('shennv::statsd_host') %>'
STATSD_PORT = 8125
STATSD_PREFIX = socket.gethostname()

############### WebServer ##################
# If you're using a reverse proxy, you should enable the X-Forwarded-Proto
# and X-Forwarded-Host headers, and uncomment the following settings
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
# USE_X_FORWARDED_HOST = True

MEILI_WEB_HOST = '127.0.0.1'
MEILI_WEB_PORT = 9000
MEILI_WEB_OPTIONS = {
    'workers': 3,  # the number of gunicorn workers
    'secure_scheme_headers': {'X-FORWARDED-PROTO': 'https'},
    'pidfile': os.path.join(BASE_DIR, 'gunicorn.pid'),
}

############# Redis #############

# Generic Redis configuration used as defaults for various things including:
# Buffers, Quotas, TSDB

MEILI_REDIS_OPTIONS = {
    'hosts': {
        0: {
            'host': '<%= scope.lookupvar('shennv::redis_host') %>',
            'port': <%= scope.lookupvar('shennv::redis_port') %>,
        }
    }
}

CELERY_ALWAYS_EAGER = False
BROKER_URL = 'redis://<%= scope.lookupvar('shennv::redis_host') %>:<%= scope.lookupvar('shennv::redis_port') %>'
CELERY_RESULT_BACKEND = 'redis://<%= scope.lookupvar('shennv::redis_host') %>:<%= scope.lookupvar('shennv::redis_port') %>'

########### Cache system #############
CACHES = {
    'default': {
        'BACKEND': 'django_bmemcached.memcached.BMemcached',
        'LOCATION': [<% scope.lookupvar('shennv::cache_hosts').each do |hostport| -%>
                        '<%= hostport %>',
                     <% end -%>],
        'OPTIONS': { <% scope.lookupvar('shennv::cache_options').each_pair do |key, val| %>
                       '<%= key %>': '<%= val %>',
                     <% end %> },
    }
}

########### Emei ##############
EMEI_STORAGE_SERVICE = 'emei.storage_services.manager.StorageServiceManager'
EMEI_OPTIONS = {
    'provider_info': {
        'provider': 'aliyun',
        'provider_url': 'aliyuncs.com',
        'provider_protocol': 'http',
        'access_key_id': '<%= scope.lookupvar('shennv::aliyun_access_id') %>',
        'access_key_secret': '<%= scope.lookupvar('shennv::aliyun_access_key') %>',
        'nosql': {
            'enable': True,
            'instances': [
                <% scope.lookupvar('shennv::ots_instances').each do |val| -%>
                    {'name': '<%= val['name'] %>',
                     'region': '<%= val['region'] %>',
                    },
                <% end -%>
            ]
        },
        'blob': {
            'enable': True,
            'instances': [
                <% scope.lookupvar('shennv::oss_instances').each do |val| -%>
                    {'name': '<%= val['name'] %>',
                     'region': '<%= val['region'] %>',
                    },
                <% end -%>
            ]
        },
        'message': {
            'enable': True,
            'owner_id': '<%= scope.lookupvar('shennv::mqs_instance_owner_id') %>',
            'instances': [
                <% scope.lookupvar('shennv::mqs_instances').each do |val| -%>
                    {'name': '<%= val['name'] %>',
                     'region': '<%= val['region'] %>',
                    },
                <% end -%>
            ]
        }
    }
}

EMEI_NOSQL_INSTANCE_NAME = '<%= scope.lookupvar('shennv::nosql_user') %>'
EMEI_BLOB_INSTANCE_USER =  '<%= scope.lookupvar('shennv::blob_user') %>'
EMEI_BLOB_INSTANCE_PUBLIC =  '<%= scope.lookupvar('shennv::blob_public') %>'
EMEI_BLOB_USER_DOMAIN = '<%= scope.lookupvar('meili::blob_user_domain') %>'
EMEI_BLOB_PUBLIC_DOMAIN = '<%= scope.lookupvar('meili::blob_public_domain') %>'
